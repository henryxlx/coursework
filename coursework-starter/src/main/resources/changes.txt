TODO list
# setting 获取配置参数的实现
# JDBC连接参数加密处理
# 连接池使用Hikari配置DataSource
# 安装过程中第3步网站设置未完成
# 后台管理用户的创建与使用
# 权限管理机制建RBAC??? role
# 数据库设置完成后，在外部存储中保存数据源配置时数据源配置信息需要加密
-------------------------------------------------------------------------------
0.1.6: @2021-12-10
* 部分代码功能优化，删除冗余的SimpleAppWorker类，其中的方法使用移到WebExtensionPack类中完成，

0.1.5: @2021-12-05
* 完善系统安装数据库功能检测与创建数据库表脚本执行功能，引入Mybatis中的ScriptRunner用于执行SQL脚本
* Web应用的使用的静态资源文件夹重命名为top开头，修复页面中renderController宏调用中的部分语法
* UI调整，后台管理中的用户菜单下的教师管理移到课程菜单下
* 获取MySQL数据库连接中必须加入参数serverTimezone=Asia/Shanghai，否则连接数据库会失败
* 安装过程添加创建数据库配置文件复制到外部数据存储的方法，依据用户设置的数据库参数生成连接配置信息

0.1.4: @2021-12-04
* 系统安装页面功能检测，获取上传与表单提交规定大小，拦截器不拦截install地址和其它静态资源
  修复安装页面当前步骤参数设置，保存在HttpSession中，检查系统当前环境判定条件修正
* 在Dao模块加入MySQL-JDBC驱动依赖包，系统安装页面环境检测与创建数据库中的数据库检测功能修复
* 数据库DataSource初始化方式修改，改为java config方式创建DataSource，
  通过外部存储中存放的Druid配置参数初始化数据源，使用druid-spring-boot-starter方式引入依赖
* 修改系统安装功能的实现方式，数据源没有正确初始化时自动转向安装目录/install

0.1.3: @2021-12-03
* 系统安装页面原型显示，在应用程序首页加入对系统数据源的检测，发现使用自定义的无效数据源则转向安装页面

0.1.2: @2021-11-29
* 权限管理添加角色、权限显示页面原型显示

0.1.1: @2021-11-28
* 系统参数setting[]由原来的Map类型改为FreeMarker自定义的函数实现
* crtf-token生成也改为FreeMarker自定义的函数实现
* FreeMarker全局使用的工具模板html_extension.ftl在配置中设置自动包含autoInclude
* 后台内容管理完成页面管理、编辑区管理原型显示
* 后台管理首页显示完善，完成显示系统信息、数据统计和受欢迎课程区域

0.1.0: @2021-11-27
* 项目模块webfast-common中的包结构重构，保留com.jetwinner的包层次，其它工具类移至本包下，删除多余的jsonUtil
* 实现图片显示default_path函数，定义在html_extension.ftl文件中，调用实现类WebExtensionPack中定义的方法
# form_label form_widget form_rest()不采用宏定义实现，效率低是一个主要原因，原始实现也不清楚
* 用户由原来的UserAccount重命名为AppUser，并创建用户基类BaseAppUser
* FreeMarker拦截器添加preHandler方法将登录后的用户信息放置在request的属性中

0.0.9: @2021-11-26
* 重新实现RenderControllerTag自定义宏标签，获取Controller中的方法调用，再转到标签内渲染模板输出
  在搜索Controller中的方法时对应的类必须实现接口BlockRenderController，用于执行块方法上必须使用
  自定义的注解@BlockRenderMethod，这些机制主要是让标签保存块执行方法的缓存
* 自定义的FreeMarker宏标签使用FreeMarker注册方式注入到模板中，而不是使用原有的拦截器方式
  在自定义的宏标签通过拦截器注入到模板中与配置注册的方式用法相同，只不过拦截器每个请求都要重新注入，效率不高
* 个人主页(/user/show)中renderController机制修改，添加显示上部用户信息模板(header-block.ftl)

0.0.8: @2021-11-25
* Bug Fixed Shiro 去除因JSESSIONID导致第一次访问请求时报400错误
* 完成个人中心的头像设置、安全设置、邮件设置与账号设置页面原型显示

0.0.7: @2021-11-22
* 完成课程存档页面原型显示，完成登录后前台我的课程页面原理显示
* 错误页面重新命名（404.ftl和500.ftl）与文件夹命名为error后，出错页面自动适配，
  此时没有使用自定义的错误页面处理WebAppGlobalErrorController

0.0.6: @2021-11-21
* 实现自定义错误页面处理WebAppGlobalErrorController，实现ErrorController接口
* 完成后台课程、内容、应用、系统首页原型显示，新建用户编辑页面弹出面板页面原型显示
* 完成登录后前台我的主页和个人中心的页面原型显示

0.0.5: @2021-11-20
* 实现在Freemarker页面调用Controller的方法renderController.execute()，这个方法使用的机制会造成request和session问题，后续需要进一步改进
  renderController方法不允许在Freemarker页面暴露HttpServletRequest，否则会发生错误，因此必须将SpringBoot中有关于Freemarker的配置
  参数spring.freemarker.expose-request-attributes设置为false，默认不设置的情况下就是false0.0.4: @2021-11-20

0.0.4: @2021-11-20
* 完成前台通知与私信页面，后台小组管理页面的显示功能

0.0.3: @2021-11-18
* 重写权限管理模块coursework-support-shiro，之前实现的代码由于操作不当被误删除，注意除了版本控制之外，还要特别做好备份

0.0.2: @2021-11-14
* 重写[FreeMarker]的处理机制，新增coursework-webapp-freemarker模块，FreeMarker页面与处理类均保存在此模块中

0.0.1: @2021-11-5
* 创建用于coursework开发的Gradle多模块项目

// end of this file.